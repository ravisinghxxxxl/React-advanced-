{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","Mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","role","aria-checked","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","toLowerCase","split","length","defaultProps","Alert","alert","word","lower","charAt","slice","capitalize","msg","data-bs-dismiss","App","setMode","_useState3","_useState4","setAlert","showAlert","message","setTimeout","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.e7a462aa.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.Mode} bg-${props.Mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"#\"> {props.title} </a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-a active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-a\" href=\"/about\">{props.aboutText}</a>\r\n          </li>\r\n        </ul>\r\n  \r\n      <div className = {`form-check form-switch text-${props.Mode === 'light'?'dark' : 'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" aria-checked=\"true\" id=\"flexSwitchCheckChecked\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">Enable Dark Mode</label>\r\n</div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\nNavbar.propTypes = {title: PropTypes.string,\r\n                    aboutText: PropTypes.string}\r\n\r\nNavbar.defaultProps = {\r\n    title :'home',\r\n    aboutText: 'about'}\r\n\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    // props.showAlert('converted to uppercase!', 'success');\r\n  };\r\n  const handleLowClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    // props.showAlert('converted to lowercase!', 'success');  \r\n  };\r\n  const handleClearText = () => {\r\n    let newText = \" \";\r\n    setText(newText);\r\n  };\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"onChange\");\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color: props.Mode === 'dark'?'white' : 'black'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.Mode === 'dark'?'grey' : 'white', color: props.Mode === 'dark'?'white' : 'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\r\n          Convert to UpperCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>\r\n          Convert to LowerCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearText}>\r\n          Delete text\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"container my-3\" style={{color: props.Mode === 'dark'?'white' : 'black'}} >\r\n        <h1>your text summary </h1>\r\n        <p>\r\n          {\" \"}\r\n          {text.split(\" \").length} words and {text.length} charecters{\" \"}\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes Read</p>\r\n        <h2> Preview </h2>\r\n        <p> {text} </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\nconst capitalize = (word) => {\r\n  const lower = word.toLowerCase();\r\n  return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n}\r\n  return (\r\n     props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n       <strong> {capitalize(props.alert.type)} </strong> : {props.alert.msg}\r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n      </div>\r\n  ); \r\n}\r\n\r\nexport default Alert;","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import ReactDOM from \"react-dom/client\";\n// import {\n//   BrowserRouter,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [Mode, setMode] = useState(\"light\");\n  // whether dark Mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert();\n    }, 3000);\n  };\n  const toggleMode = () => {\n    if (Mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"darkblue\";\n      showAlert(\"dark mode enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n\n  return (\n    <>\n      {/* <Navbar title=\"Textutils\" aboutText=\"About textutils\"/> */}\n      {/* <Navbar/> */}\n\n      {/* <BrowserRouter> */}\n      <Navbar title=\"textutils\" Mode={Mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n    {/* <Routes> */}\n          {/* <Route path=\"/about\" element={<About/>}> */}\n          {/* </Route> */}\n          {/* <Route  path=\"/\" element={ }> */}\n          <TextForm heading=\"Enter the text to analyse\" Mode={Mode} />\n          {/* </Route> */}\n      {/* </Routes> */}\n      </div>\n  {/* </BrowserRouter> */}\n        {/* <About/> */}\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}